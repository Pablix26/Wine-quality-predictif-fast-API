name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # Installer les dépendances du projet
      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      # Installer les dépendances de tests, y compris pytest-cov
      - name: Install testing dependencies
        run: |
          pip install --no-cache-dir pytest pytest-asyncio httpx pytest-cov

      # Démarrer les services Docker Compose
      - name: Start Docker Compose services
        run: |
          docker-compose up -d

      # Exécuter les tests avec la couverture de code
      - name: Run pytest with coverage
        run: |
          pytest --cov=app --cov-report=xml --junitxml=tests/results.xml

      # (Optionnel) Télécharger les rapports
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./tests/results.xml

      # (Optionnel) Télécharger le rapport de couverture à Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      # (Optionnel) Arrêter les services Docker Compose
      - name: Stop Docker Compose services
        if: always()
        run: |
          docker-compose down
